pipeline {
    agent none

    stages {
        stage('Build') {
            agent {
                docker {
                    image 'maven:3-alpine'
                    args '-v /root/.m2:/root/.m2'
                }
            }
            steps {
                sh 'mvn -B -DskipTests -f academi-co/pom.xml clean package'
            }
        }

        stage('Containers') {
            agent {
                docker {
                    image 'docker'
                    args '--net="host"'
                }
            }
            steps {
                sh 'sh Jenkins/scripts/database/runDatabase.sh'
            }
        }

        stage('Test') {
            agent {
                docker {
                    image 'maven:3-alpine'
                    args '-v /root/.m2:/root/.m2'
                }
            }
            steps {
                sh 'mvn -f academi-co/pom.xml test'
            }
            post {
                always {
                    junit 'academi-co/target/surefire-reports/*.xml'
                }
            }
        }
    }

    post {
        success {
            emailext (
                subject: "SUCCESSFUL: Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]'",
                to: 'Nicolas.Cotte.1@etu.unige.ch, Petr.Binko@etu.unige.ch',
                recipientProviders: [[$class: 'DevelopersRecipientProvider']],

                body: """SUCCESSFUL: Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]':

                Check console output at '${env.BUILD_URL}'
                Last commit: '${env.GIT_COMMIT}'"""
            )
        }

        failure {
            emailext (
                subject: "FAILED: Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]'",
                to: 'Nicolas.Cotte.1@etu.unige.ch, Petr.Binko@etu.unige.ch',
                recipientProviders: [[$class: 'DevelopersRecipientProvider']],

                body: """FAILED: Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]':

                Check console output at '${env.BUILD_URL}'
                Last commit: '${env.GIT_COMMIT}'"""
            )
        }
    }
}
